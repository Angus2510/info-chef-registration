datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum RegistrationType {
  INDIVIDUAL
  BULK
  BOOTH
  SPONSOR
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

enum PaymentMethod {
  CARD
  EFT
}

enum NumberOfDays {
  ONE
  TWO
}

model Registration {
  id              String          @id @default(cuid())
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  reference       String          @unique
  type            RegistrationType
  paymentStatus   PaymentStatus   @default(PENDING)
  paymentMethod   PaymentMethod
  totalPrice      Float

  // Relations
  individual      IndividualRegistration?
  bulk           BulkRegistration?
  booth          BoothRegistration?
  sponsor        SponsorRegistration?
}

model IndividualRegistration {
  id               String       @id @default(cuid())
  registration     Registration @relation(fields: [registrationId], references: [id])
  registrationId   String       @unique

  name             String
  idNumber         String
  email            String
  contactNumber    String
  invoicingDetails String
  attendeeType     String
  isMember         Boolean
  numberOfDays     NumberOfDays
  selectedDate     String?
  selectedPricing  String
}

model BulkRegistration {
  id                 String       @id @default(cuid())
  registration       Registration @relation(fields: [registrationId], references: [id])
  registrationId     String       @unique

  organizationType   String
  schoolName         String
  vatNumber         String?
  contactPersonName  String
  contactPersonEmail String
  contactPersonPhone String
  memberStudents     Int
  nonMemberStudents  Int
  memberTeachers     Int
  nonMemberTeachers  Int
  numberOfDays       NumberOfDays
  selectedDate       String?
}

model BoothRegistration {
  id                  String       @id @default(cuid())
  registration        Registration @relation(fields: [registrationId], references: [id])
  registrationId      String       @unique

  exhibitorType       String
  exhibitorSize       String
  educationOption     String
  industryOption      String
  companyName         String
  companyAddress      String
  companyEmail        String
  companyContactNumber String
  companyVAT          String
  companyContactPerson String
  priceBeforeVAT      Float
  vatAmount           Float
}

model SponsorRegistration {
  id                   String       @id @default(cuid())
  registration         Registration @relation(fields: [registrationId], references: [id])
  registrationId       String       @unique

  sponsorshipType      String
  competitionPantryType String
  partnerTier          String
  companyName          String
  companyAddress       String
  companyEmail         String
  companyContactNumber String
  companyVAT           String
  companyContactPerson String
  basePrice            Float
  discount             Float
  priceBeforeVAT       Float
  vatAmount            Float
}